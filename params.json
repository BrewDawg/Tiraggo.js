{"name":"Tiraggo.js","tagline":"JavaScript ORM to Compliment the Tiraggo Architecture","body":"Tiraggo.js is built upon Knockout\r\n\r\nCopyright Â© Mike Griffin. All Rights Reserved.<BR>\r\nMikes [Personal Site](http://www.tiraggo.com)<br>\r\nMikes [Twitter Account](https://twitter.com/TheBrewDawg)\r\n\r\nLicense: MIT\r\n\r\n##Live Tiraggo/Tiraggo.js/Knockout Application##\r\n* [Run the Live Application] (http://www.tiraggo.com/tiraggo/wcfservice/Editing.aspx)\r\n\r\n##Features##\r\n* Built upon Knockout and the MVVM Model\r\n* All class properties are ko.observables and collections classes are ko.observableArrays\r\n* Only 17k minimized\r\n* Supports MS SQL Server, Azure, SQL CE, Oracle, PostgreSQL, MySQL, SQLite\r\n* Supports WCF JSON Service and RESTFUL API's\r\n* Supports Full Hierarchical Data Models\r\n* Hierarchical Model Supports Lazy Loading (See video below)\r\n* All saves take place within transactions, including complex hierarchcial saves\r\n* Two Providers, either pure XHR or JQuery Ajax (you choose which one you want to use)\r\n* Tracks Row Level and Column Level Dirty State\r\n* Tracks Original Values so Edits can be Cancelled via RejectChanges\r\n* Generic - Can be used with any ORM or Database Backend\r\n\r\n##Intuitive API##\r\n```javascript\r\n    // Add a single record\r\n    var emp = new tg.objects.Employees();\r\n    emp.FirstName(\"Just\");\r\n    emp.LastName(\"Added\");\r\n    emp.save();\r\n\r\n    // Or the same as above\r\n    var emp = new tg.objects.Employees({\r\n        FirstName: 'Just',\r\n        LastName: 'Added'\r\n    });\r\n    emp.Save();\r\n```\r\n##Real World Usage Examples##\r\n* [Adding and Saving New Records] (https://github.com/BrewDawg/Tiraggo.js/wiki/Adding-New-Records)\r\n* [Deleting Records] (https://github.com/BrewDawg/Tiraggo.js/wiki/Deleting-Records)\r\n* [Loading and Saving Hierarchical Data] (https://github.com/BrewDawg/Tiraggo.js/wiki/Loading-and-Saving-Hierarchical-Data)\r\n* [Asychronous and or Synchronous methods] (https://github.com/BrewDawg/Tiraggo.js/wiki/Asychronous-&-Synchronous-methods)\r\n* [Passing in 'state' to the Async methods] (https://github.com/BrewDawg/Tiraggo.js/wiki/Passing-in-'state'-to-the-Async-methods)\r\n\r\n##How the Application was Created##\r\n* [The Visual Studio Solution] (http://brewdawg.com/blog/?p=137)\r\n\r\n##Tiraggo's Endless Possibilities##\r\n<img src=\"https://raw.github.com/BrewDawg/Tiraggo.js/master/images/Tiraggo_Architecture.png\" border=\"0\">\r\n\r\n##Tiraggo - The Nomadic Architecture##\r\n* [The Tiraggo C# Architecture] (http://brewdawg.github.com/Tiraggo/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}